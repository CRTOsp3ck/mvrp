// Code generated by MVRP Codegen Util. DO NOT EDIT.

package sale

import (
	"context"
	"mvrp/data/model/sale"
	
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/sqlboiler/v4/queries/qm"
)

func (r *SaleRepository) ListAllDeliveryNoteItemViews(ctx context.Context, exec boil.ContextExecutor) (sale.DeliveryNoteItemViewSlice, error) {
	return sale.DeliveryNoteItemViews().All(ctx, exec)
}

func (r *SaleRepository) GetDeliveryNoteItemViewByID(ctx context.Context, exec boil.ContextExecutor, id int) (*sale.DeliveryNoteItemView, error) {
	return sale.DeliveryNoteItemViews(qm.Where(sale.DeliveryNoteItemViewColumns.ID+"=?", id)).One(ctx, exec)
}

func (r *SaleRepository) DeliveryNoteItemViewExists(ctx context.Context, exec boil.ContextExecutor, id int) (bool, error) {
	return sale.DeliveryNoteItemViews(qm.Where(sale.DeliveryNoteItemViewColumns.ID+"=?", id)).Exists(ctx, exec)
}

func (r *SaleRepository) GetDeliveryNoteItemViewRowsCount(ctx context.Context, exec boil.ContextExecutor) (int, error) {
	count, err := sale.DeliveryNoteItemViews().Count(ctx, exec)
	return int(count), err
}

func (r *SaleRepository) GetMostRecentDeliveryNoteItemView(ctx context.Context, exec boil.ContextExecutor) (*sale.DeliveryNoteItemView, error) {
	return sale.DeliveryNoteItemViews(qm.OrderBy("created_at DESC")).One(ctx, exec)
}