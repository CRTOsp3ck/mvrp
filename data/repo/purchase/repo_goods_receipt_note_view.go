// Code generated by MVRP Codegen Util. DO NOT EDIT.

package purchase

import (
	"context"
	"mvrp/data/model/purchase"
	
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/sqlboiler/v4/queries/qm"
)

func (r *PurchaseRepository) ListAllGoodsReceiptNoteViews(ctx context.Context, exec boil.ContextExecutor) (purchase.GoodsReceiptNoteViewSlice, error) {
	return purchase.GoodsReceiptNoteViews().All(ctx, exec)
}

func (r *PurchaseRepository) GetGoodsReceiptNoteViewByID(ctx context.Context, exec boil.ContextExecutor, id int) (*purchase.GoodsReceiptNoteView, error) {
	return purchase.GoodsReceiptNoteViews(qm.Where(purchase.GoodsReceiptNoteViewColumns.ID+"=?", id)).One(ctx, exec)
}

func (r *PurchaseRepository) GoodsReceiptNoteViewExists(ctx context.Context, exec boil.ContextExecutor, id int) (bool, error) {
	return purchase.GoodsReceiptNoteViews(qm.Where(purchase.GoodsReceiptNoteViewColumns.ID+"=?", id)).Exists(ctx, exec)
}

func (r *PurchaseRepository) GetGoodsReceiptNoteViewRowsCount(ctx context.Context, exec boil.ContextExecutor) (int, error) {
	count, err := purchase.GoodsReceiptNoteViews().Count(ctx, exec)
	return int(count), err
}

func (r *PurchaseRepository) GetMostRecentGoodsReceiptNoteView(ctx context.Context, exec boil.ContextExecutor) (*purchase.GoodsReceiptNoteView, error) {
	return purchase.GoodsReceiptNoteViews(qm.OrderBy("created_at DESC")).One(ctx, exec)
}